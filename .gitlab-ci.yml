stages:
  - test

variables:
  # Cache pro pip balíčky
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  # Cesty ke cache (pip a virtuální prostředí)
  paths:
    - .cache/pip
    - venv/

before_script:
  # Použij 'python3' místo 'python'
  - python3 -V
  # Použij vestavěný modul 'venv' místo instalace 'virtualenv'
  - python3 -m venv venv
  # Aktivuj virtuální prostředí
  - source venv/bin/activate
  # Upgraduj pip uvnitř venv (doporučeno)
  - python3 -m pip install --upgrade pip
  # Instaluj závislosti pomocí pip z venv
  - python3 -m pip install -r requirements.txt

test_job:
  stage: test
  script:
    - echo "Spouštím testy..."
    # Spusť pytest pomocí python3 z aktivního venv
    - python3 -m pytest tests/
    # Pokud chceš JUnit reporty (vyžaduje pytest-junit v requirements.txt):
    # - python3 -m pytest tests/ --junitxml=report.xml
    - echo "Testy dokončeny."
  artifacts:
    # Ulož artefakty vždy (i když job selže před jejich vytvořením)
    when: always
    # Sekce reports je relevantní jen pokud generuješ JUnit XML report
    # reports:
    #   junit: report.xml